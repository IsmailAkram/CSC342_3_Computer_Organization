; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30136.0 

	TITLE	C:\Users\Izzy\OneDrive\College\CSC342_3 Computer Organization\Exams\Akram_Take_Home_Final_Take_Home_Test\Intel x86 (VS)\Optimized_Dot_Product\Optimized_Dot_Product\Debug\Op_Dot_Prod_Pntr.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__C67D7BCF_Op_Dot_Prod_Pntr@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?Dot_Prod_Pntr@@YAMPAM0H@Z			; Dot_Prod_Pntr
PUBLIC	__JustMyCode_Default
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__fltused:DWORD
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Dot_Prod_Pntr@@YAMPAM0H@Z
_TEXT	SEGMENT
_sum$ = -4						; size = 4
_arr_1$ = 8						; size = 4
_arr_2$ = 12						; size = 4
_size$ = 16						; size = 4
?Dot_Prod_Pntr@@YAMPAM0H@Z PROC				; Dot_Prod_Pntr, COMDAT
; File C:\Users\Izzy\OneDrive\College\CSC342_3 Computer Organization\Exams\Akram_Take_Home_Final_Take_Home_Test\Intel x86 (VS)\Optimized_Dot_Product\Optimized_Dot_Product\Op_Dot_Prod_Pntr.cpp
; Line 1
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	ecx, OFFSET __C67D7BCF_Op_Dot_Prod_Pntr@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR _arr_1$[ebp]
	mov	edx, DWORD PTR _arr_2$[ebp]
	vxorps	xmm2, xmm2, xmm2
	lea	esi, DWORD PTR [eax*4]
	lea	eax, DWORD PTR [esi+ecx]
	vmovss	DWORD PTR _sum$[ebp], xmm2
	cmp	ecx, eax
	jae	SHORT $LN15@Dot_Prod_P
; Line 5
	and	esi, -4					; fffffffcH
	cmp	esi, 16					; 00000010H
	jb	SHORT $LN14@Dot_Prod_P
	mov	esi, edx
	push	edi
	lea	edi, DWORD PTR [eax-12]
	sub	esi, ecx
	npad	1
$LL11@Dot_Prod_P:
; Line 6
	vmovss	xmm0, DWORD PTR [esi+ecx+4]
	vmulss	xmm1, xmm0, DWORD PTR [ecx+4]
	vmovss	xmm0, DWORD PTR [edx]
	vmulss	xmm0, xmm0, DWORD PTR [ecx]
	vaddss	xmm0, xmm0, xmm2
	vaddss	xmm1, xmm1, xmm0
	vmovss	xmm0, DWORD PTR [edx+8]
	vmulss	xmm0, xmm0, DWORD PTR [ecx+8]
	vaddss	xmm1, xmm1, xmm0
	vmovss	xmm0, DWORD PTR [edx+12]
	vmulss	xmm0, xmm0, DWORD PTR [ecx+12]
	add	ecx, 16					; 00000010H
	add	edx, 16					; 00000010H
	vaddss	xmm2, xmm1, xmm0
	cmp	ecx, edi
	jb	SHORT $LL11@Dot_Prod_P
	vmovss	DWORD PTR _sum$[ebp], xmm2
	pop	edi
	cmp	ecx, eax
	jae	SHORT $LN15@Dot_Prod_P
$LN14@Dot_Prod_P:
	sub	edx, ecx
	npad	3
$LC4@Dot_Prod_P:
	vmovss	xmm0, DWORD PTR [edx+ecx]
	vmulss	xmm0, xmm0, DWORD PTR [ecx]
	add	ecx, 4
	vaddss	xmm2, xmm0, xmm2
	cmp	ecx, eax
	jb	SHORT $LC4@Dot_Prod_P
	vmovss	DWORD PTR _sum$[ebp], xmm2
$LN15@Dot_Prod_P:
; Line 8
	fld	DWORD PTR _sum$[ebp]
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?Dot_Prod_Pntr@@YAMPAM0H@Z ENDP				; Dot_Prod_Pntr
_TEXT	ENDS
END
